// <auto-generated />
using System;
using APIDs.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIDs.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221215160547_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APIDs.Entities.CardColor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("CardColors");
                });

            modelBuilder.Entity("APIDs.Entities.Creatures", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int?>("Colorid")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Colorid");

                    b.ToTable("Creatures");
                });

            modelBuilder.Entity("APIDs.Entities.Ground", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Colorid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Colorid");

                    b.ToTable("Grounds");
                });

            modelBuilder.Entity("APIDs.Entities.Spell", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Colorid")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Colorid");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("APIDs.Entities.Creatures", b =>
                {
                    b.HasOne("APIDs.Entities.CardColor", "Color")
                        .WithMany()
                        .HasForeignKey("Colorid");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("APIDs.Entities.Ground", b =>
                {
                    b.HasOne("APIDs.Entities.CardColor", "Color")
                        .WithMany()
                        .HasForeignKey("Colorid");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("APIDs.Entities.Spell", b =>
                {
                    b.HasOne("APIDs.Entities.CardColor", "Color")
                        .WithMany()
                        .HasForeignKey("Colorid");

                    b.Navigation("Color");
                });
#pragma warning restore 612, 618
        }
    }
}
